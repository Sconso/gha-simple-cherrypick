name: Cherry-pick

on:
  workflow_dispatch:
    inputs:
      prNumber:
        type: string
        description: Pull request number
        required: true
      tags:
        type: string
        description: Which tags to cherry-pick on
        required: true

jobs:
  release-staging:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Test cherry-pick
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          git --version

          git config --global user.email ""
          git config --global user.name "Botman"
          
          git fetch --all
          echo "-- Git Status --"
          git status
          echo -e "\n"


          prNumber=${{ github.event.inputs.prNumber }}
          commitToMerge=$(gh pr view $prNumber --json --jq '.merge_commit_sha')
          
          
          
          echo "Commit is $commitToMerge"
          echo "PR Number is $prNumber"

          # Cherry picking commit in each tags separated by a comma
          for tag in $(echo "${{ github.event.inputs.tags }}" | tr ',' '\n'); do
            targetBranch="release/$tag"

            echo -e "\n-- Cherry-picking commit $commitToMerge in branch $targetBranch --"
            echo "Checkout $targetBranch"
            git checkout $targetBranch

            echo "Creating a cherry-pick branch"
            git checkout -b cherry-pick/$tag

            echo "Cherry-pick commit $commitToMerge in branch $targetBranch"
            git cherry-pick $commitToMerge
            git commit -am "Cherry pick #$prNumber for tag $tag"

            # Opens a pull request for the cherry pick
            echo "Pushing changes"
            git push origin cherry-pick/$tag

            echo "Opening pull request"
            gh pr create --title "Cherry-pick #${prNumber} for tag $tag" --body "Cherry-pick #${prNumber} for tag $tag" --base $targetBranch --head cherry-pick/$tag
          done
