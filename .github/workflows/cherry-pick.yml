name: Cherry-pick

on:
  workflow_dispatch:
    inputs:
      prNumber:
        type: string
        description: Pull request number
        required: true
      tags:
        type: string
        description: Which tags to cherry-pick on
        required: true

jobs:
  release-staging:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Test cherry-pick
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          git --version

          git config --global user.email ""
          git config --global user.name "Botman"
          
          git fetch --all
          echo "-- Git Status --"
          git status
          echo -e "\n"

          prNumber=${{ github.event.inputs.prNumber }}
          prInfos=$(gh pr view $prNumber --json mergeCommit,title,body)
          
          echo "PR Number is $prNumber"



          commitToMerge=$(echo $prInfos | jq -r '.mergeCommit.oid')   
          prTitle=$(echo $prInfos | jq -r '.title')
          prBody=$(echo $prInfos | jq -r '.body')
     
          echo "Commit is $commitToMerge"

          # Cherry picking commit in each tags separated by a comma
          for tag in $(echo "${{ github.event.inputs.tags }}" | tr ',' '\n'); do
            targetBranch="release/$tag"

            echo -e "\n-- Cherry-picking commit $commitToMerge in branch $targetBranch --"
            echo "- Checkout $targetBranch"
            git checkout $targetBranch

            echo "- Creating a cherry-pick branch"
            git checkout -b cherry-pick/$tag
            git pull origin $targetBranch

            echo "- Cherry-pick commit $commitToMerge in branch $targetBranch"
            commitMessage=$(git log -n 1 --pretty=format:%s $commitToMerge)

            git cherry-pick -m 1 --allow-empty --strategy-option theirs --no-commit $commitToMerge

            if [ $? -ne 0 ]; then
              echo "- Cherry-pick failed, commiting anyway"
            fi

            git commit -am "$commitMessage"

            echo "- Pushing changes"
            git push origin cherry-pick/$tag

            echo "- Opening pull request"
            newPrTitle="[üêö/Cherrypick #$prNumber on $tag] $prTitle"
            # newPrBody=$(cat <<-EOT
            #   ### Cherrypicking #${prNumber} on $tag
            #   -------------
            #   $prBody
            # EOT
            # )
            newPrBody="Test"

            gh pr create --title "$newPrTitle" --body "$newPrBody" --base $targetBranch --head cherry-pick/$tag
          done
